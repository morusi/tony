# 添加elep 源
# yum install openvpn 
rpm -ql  openvpn 
将  ca.crt dh2048.pem server.conf server.crt server.key 拷贝到
/etc/openvpn

配置server.conf
;local a.b.c.d # 申明本机使用的IP地址,也可以不说明
port 1194 # 申明使用的端口,默认1194
;proto tcp
proto udp # 申明使用的协议,默认使用UDP,如果使用HTTP proxy 必须使用TCP
dev tap # 申明使用的设备,可选tap 和 tun. tap 是二层设备.支持链路层协议
;dev tun  # tun是ip层的点对点协议,限制稍微多一些.
ca ca.crt # open vpn 使用的ROOT CA,使用build-ca生成,用于验证客户证书是否合法
cert server.crt # Server 使用的证书文件
key server.key # Server 使用的证书对应的key,注意文件的权限,防止被盗
crl-verify vpncrl.pem # CRL文件的申明,被吊销的证书链,这些证书无法登陆
dh dh1024.pem # 命令的集合,如果你是OpenVPN的老用户,就知道这条命令的由来
        这条命令等效于:
                mode server # OpenVPN工作在Server模式,可以支持多client同时动态接入
                tls-server # 使用TLS加密传输,本端为Server, Client端为tls-client
if dev tun # 如果使用tun设备,等效于一下配置
ifconfig 10.8.0.1 10.8.0.2 # 设置本地tun设备地址
ifconfig-pool 10.8.0.4 10.8.0.251 # 说明OpenVPN 使用的地址池(用于分配给客户),分别是起始地址,结束地址
route  10.8.0.0 255.255.255.0 # 增加一条静态路由,省略下一跳地址,下一跳为对端地址,这里是10.8.0.2

ifconfig client-to-client # 如果使用了client-to-client 
push "route 10.8.0.0 255.255.255.0" # 把这条路由发送给客户端,客户端连接成功后自动加入路由器表,省略下一跳地址:10.8.0.1
else
push "route 10.8.0.1" 或者发送本跳路由,这是一个主机路由,省略了子网掩码和下一跳地址,分别为:255.255.255.255 10.8.0.1

if dev tap: # 如果使用tap 设备,则等效于一下命令
ifconfig 10.8.0.1 255.255.255.0 # 配置tap设备的地址
ifconfig-pool 10.8.0.2 10.8.0.254 255.255.255.0 # 客户端使用地址池,分别是起始地址,结束地址,子网掩码
push "route-gateway 10.8.0.1" # 把环境变量route-gateway 传递给客户机

server 10.8.0.0 255.255.255.0 # 等效于以上命令
ifconfig-pool-persist ipp.txt # 用于记录某个client 获得的IP地址,防止openvpn重启后"忘记"client曾使用过的IP

;server-bridge 10.8.0.4 255.2555.255.0 10.8.0.50 10.8.0.100 # Bridge 状态下类似DHCPD的配置,为客户分配地址,由于这里工作在路由模式,所以不适用
;push "route 192.168.10.0 255.255.255.0"
;push "route 192.168.20.0 255.255.255.0" # 通过VPN Server 往Client push 路由,client通过pull指令获取Server push的所有选项并应用
;push "route 10.9.0.0 255.255.255.252" # VPN启动后,在VPN Server上添加的路由,VPN停止后自动删除
;learn-address ./script # Run script or shell command cmd to validate client Virtual address or routes. 具体查看manual
#其他一些需要push给client的选项
;push "redirect-gateway" # 使用client的默认网关指向VPN,让Client 的所有Traffic都通过VPN走
;push "dhcp-option DNS 10.8.0.1" # DHCP的一些选项,具体查看Manual
;push "dhcp-option WINS 10.8.0.1" 

client-to-client # 如果可以让VPN Client 之间相互访问直接通过openvpn 程序转发 不用发送到tun或者tap 设备后重新转发,优化client to clent的访问效率

;duplicate-cn # 如果Client 使用的CA的Common Name 有重复了,或者说客户都使用相同的CA和keys连接VPN, 一定要打开这个选项,否则值允许一个人连接VPN
keepalive 10 120  # NAT 后面使用VPN,如果VPN长时间不通信,NAT Session 可能会失效, 导致VPN连接丢失,为防止之类事情的发生,keepalive 提供一个类似于ping的机制,
        表示每10秒通过VPN的Control通道ping对方,如果连续120秒无法ping通,认为连接丢失,并重新启动VPN,重新连接
tls-auth ta.key 0 # This file is secret 上面提到的HMAC防火墙,防止DOS攻击,对于所有的控制信息,都使用HMAC signature, 没有HMAC
        signature的控制信息不予处理,注意Server端后面的数字肯定使用 0, client 使用 1

comp-lzo # 对数据进行压缩,注意Server 和 Client 一致
max-clients 100 # 定义最大连接数
user nobody
group nobody # 定义运行openvpn 的用户
persist-key # 通过keepalive检测超时后,重新启动VPN,不重新读取keys,保留第一次使用的keys
persist-tun # 通过keepalive 检测超时后,重新启动VPN,一直保持tun或者tap设备是linkup的,否则网络连接会先linkdown 然后linkup
status openvpn-status.log # 定期把openvpn的一些状态信息写到文件中,以便自己写程序计费或者进行其他操作
log /var/log/openvpn.log #记录日志,每次重新启动openvpn后删除原来的log 信息
;log -append openvpn.log # 和log一致,每次重启后保留原来的log信息,新信息追加到文件最后

verb 3 # 相当于debug level 具体查看manual


client 配置
dev tap # 指定接口类型,与server端一致
;dev tun
;proto tcp # 指定协议,与server端一致
proto udp
remote 61.1.1.2 1194 # 设置Server的IP地址和端口,如果有多台机器做负载均衡,可以多次出现remote关键字
;remote my-server-2 1194
;remote-random # 随机选择一个server链接,否则按照顺序从上到下依次连接

resolv-retry infinite # 始终重新解析Server的IP地址(如果remote后边跟的是域名),保证Server IP 地址是动态的使用DNS动态更新DNS后,Client在自动连接时重新解析Server的IP地址
nobind # 在本地不绑定任何端口监听incomming数据,client无需此操作,除非一对一的VPN有必要

user nobody
group nobody 运行openvpn的用户身份

route 192.168.0.0 255.255.0.0 # 在client端增加路由,使的所有访问内网的流量都经过vpn出去 当然也可以在
    Server的配置文件里头设置,server配置里头使用的命令是 push "route 192.168.0.0 255.255.255.0"

persist-key  # 和Server配置上的功能一样如果使用了chroot或者su功能,最好打开下面2项,防止重新启动后找不到keys文件,或者nobody用户没有权限启动tun设备
persist-tun

;http-proxy-retry # 如果使用了HTTP代理连接VPNServer,把Proxy的ip地址和端口写在下面 ,如果代理需要验证,使用http-proxy server port [authfile] 
            [auth-method],其中authfile是一个2行的文本文件,用户名和密码各占一行,auth-method 可以省略,详细查看Manual 
;thhp-proxy [prixy server][prixy port #]

对于无线设备使用VPN的配置，看看就明白了
;mute-replay-warnings
ca ca.crt 
cert elm.crt
key elm.key 
ns-cert-type server   Server使用build-key-server脚本什成的，在x509 v3扩展中加入了ns-cert-type选项  # 防止VPN client使用他们的keys ＋ 
                        DNS hack欺骗vpn client连接他们假冒的VPN Server # 因为他们的CA里没有这个扩展
tls-auth ta.key 1
comp-lzo


